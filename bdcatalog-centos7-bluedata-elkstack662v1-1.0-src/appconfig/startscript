#!/bin/bash
#
# Copyright 2016 (c) BlueData Software, Inc.
#
#

set -o pipefail
SELF=$(readlink -nf $0)
export CONFIG_BASE_DIR=$(dirname ${SELF})

source ${CONFIG_BASE_DIR}/logging.sh
source ${CONFIG_BASE_DIR}/utils.sh

if [[ "$1" == "--addnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--delnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--configure" ]]; then
    log "Starting configuration ... "

    ## Fall through to start the configuration.
else
    echo "ERROR: Unknown command line option(s): '$@'"
    exit 10
fi

source ${CONFIG_BASE_DIR}/macros.sh

####################### AUTOGENERATED CODE STARTS BELOW #######################
#
[ ! -d '/etc/elasticsearch/' ] && mkdir -vp /etc/elasticsearch/
cp -rvf ${CONFIG_BASE_DIR}/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml

[ ! -d '/etc/kibana/' ] && mkdir -vp /etc/kibana/
cp -rvf ${CONFIG_BASE_DIR}/kibana.yml /etc/kibana/kibana.yml

[ ! -d '/etc/logstash/conf.d/' ] && mkdir -vp /etc/logstash/conf.d/
cp -rvf ${CONFIG_BASE_DIR}/logstash-filter.conf /etc/logstash/conf.d/logstash-filter.conf

REPLACE_PATTERN @@@@MY_IP@@@@ /etc/elasticsearch/elasticsearch.yml GET_NODE_IPADDR

REPLACE_PATTERN @@@@HOSTNAME@@@@ /etc/elasticsearch/elasticsearch.yml echo $HOSTNAME

REPLACE_PATTERN @@@@MY_IP@@@@ /etc/kibana/kibana.yml GET_NODE_IPADDR

REPLACE_PATTERN @@@@HOSTNAME@@@@ /etc/kibana/kibana.yml echo $HOSTNAME

if  [[ "${ROLE}" == 'master' ]] ||\
  [[ "${ROLE}" == 'data' ]] ||\
  [[ "${ROLE}" == 'logstash' ]] ||\
  [[ "${ROLE}" == 'kibana' ]]; then
    bash ${CONFIG_BASE_DIR}/discovery_list.sh || exit 2
fi


REGISTER_START_SERVICE_SYSCTL elasticsearch elasticsearch
REGISTER_START_SERVICE_SYSCTL kibana kibana
REGISTER_START_SERVICE_SYSCTL logstash logstash
